{"version":3,"sources":["components/MainNavigation/MainNavigation.tsx","App.tsx","pages/Home.tsx","pages/Page404.tsx","components/Loader/Loader.tsx","api.ts","Store.ts","pages/People.tsx","Root.tsx","index.tsx"],"names":["MainNavigation","className","role","isActive","cn","to","App","Home","Page404","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","peopleStore","create","set","people","setPeople","arg","state","People","useState","loading","setLoading","error","setError","human","useParams","useEffect","res","catch","err","Error","message","finally","parentLink","name","parent","find","el","sex","slug","length","map","born","died","fatherName","motherName","href","Root","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d02bc06b.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const MainNavigation: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => cn('navbar-item',\n            { 'has-background-grey-lighter': isActive })}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => cn('navbar-item',\n            { 'has-background-grey-lighter': isActive })}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport { MainNavigation } from './components/MainNavigation';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <MainNavigation />\n    <Outlet />\n  </div>\n);\n","export const Home: React.FC = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  </main>\n);\n","export const Page404: React.FC = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Page not found</h1>\n    </div>\n  </main>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { create } from 'zustand';\nimport { Person } from './types';\n\ninterface State {\n  people: Person[],\n  setPeople: (arg: Person[]) => void,\n}\n\nexport const peopleStore = create<State>((set) => ({\n  people: [],\n  setPeople:\n  (arg: Person[]) => set((state: State) => ({ ...state, people: arg })),\n}));\n","import { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Loader } from '../components/Loader';\nimport { getPeople } from '../api';\nimport { peopleStore } from '../Store';\n\nexport const People: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { human } = useParams();\n  const { people, setPeople } = peopleStore();\n\n  useEffect(() => {\n    setLoading(true);\n    getPeople()\n      .then((res) => setPeople(res))\n      .catch(err => {\n        setError(true);\n        Error(err.message);\n      }).finally(() => setLoading(false));\n  }, []);\n\n  const parentLink = (name: string | null) => {\n    if (!name) {\n      return '-';\n    }\n\n    const parent = people.find(el => el.name === name);\n\n    if (!parent) {\n      return name;\n    }\n\n    return (\n      <Link\n        className={cn(\n          { 'has-text-danger': parent.sex === 'f' },\n        )}\n        to={`../${parent.slug}`}\n      >\n        {parent.name}\n      </Link>\n    );\n  };\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n      </div>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length === 0\n            && (\n              <p\n                data-cy=\"noPeopleMessage\"\n              >\n                There are no people on the server\n              </p>\n            )}\n\n          {loading\n            ? <Loader />\n            : (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {people.map(({\n                    name,\n                    slug,\n                    sex,\n                    born,\n                    died,\n                    fatherName,\n                    motherName,\n                  }) => {\n                    return (\n                      <tr\n                        key={slug}\n                        data-cy=\"person\"\n                        className={\n                          cn({ 'has-background-warning': slug === human })\n                        }\n                      >\n                        <td>\n                          <Link\n                            className={cn(\n                              { 'has-text-danger': sex === 'f' },\n                            )}\n                            to={`../${slug}`}\n                          >\n                            {name}\n                          </Link>\n                        </td>\n\n                        <td>{sex}</td>\n                        <td>{born}</td>\n                        <td>{died}</td>\n                        <td>{parentLink(motherName)}</td>\n                        <td>{parentLink(fatherName)}</td>\n                      </tr>\n                    );\n                  })}\n                  <tr\n                    data-cy=\"person\"\n                    // className=\"has-background-warning\"\n                    // className=\"has-text-danger\"\n                  >\n                    <td>\n                      <a\n                        href=\"#/people/jan-van-brussel-1714\"\n                      >\n                        Jan van Brussel\n                      </a>\n                    </td>\n\n                    <td>m</td>\n                    <td>1714</td>\n                    <td>1748</td>\n                    <td>Joanna van Rooten</td>\n                    <td>Jacobus van Brussel</td>\n                  </tr>\n                </tbody>\n              </table>\n            )}\n        </div>\n      </div>\n    </main>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { Home } from './pages/Home';\nimport { Page404 } from './pages/Page404';\nimport { People } from './pages/People';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"*\" element={<Page404 />} />\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<Home />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" />} />\n        <Route path=\"people\">\n          <Route path=\":human?\" element={<People />} />\n        </Route>\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}